local WORLD = require "scenes.game.model.world"
local HASHES = require "libs.hashes"
---@class SelfGui1
---@param self SelfGui1

---@param self SelfGui1
local function update_disk_space(self)
    local rotation = 0
    for i=1, 4 do
        local space = self.disk_space[i]
        local ui = self.ui[i]
        gui.set_text(ui.lbl, space)
        gui.set_rotation(ui.pie, vmath.vector3(0,0,rotation))
        gui.set_fill_angle(ui.pie, 360*space)
        rotation = rotation + 360 * space
    end
end

function init(self)
    WORLD:reset()
    self.ui = {
        {pie=gui.get_node("pie0"), lbl = gui.get_node("text0")},
        {pie=gui.get_node("pie1"), lbl = gui.get_node("text1")},
        {pie=gui.get_node("pie2"), lbl = gui.get_node("text2")},
        {pie=gui.get_node("pie3"), lbl = gui.get_node("text3")},
    }
    self.disk_space = {0.4,0.1,0.25,0.25}
    update_disk_space(self)
end



function final(self)
	WORLD:reset()
end

function update(self, dt)
	-- Add update code here
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
    if action_id == HASHES.INPUT_TOUCH then
        if action.pressed then

        elseif action.released then
            self.on_touched_disk = false
        end
        if self.on_touched_disk then
            --chnage sector size
        end
    end
end

function on_reload(self)
	-- Add input-handling code here
	-- Remove this function if not needed
end
